sudo: required
dist: trusty

language: cpp
compiler:
    - gcc
    - clang
before_install:
    - sudo dpkg --add-architecture i386
    - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
    - sudo apt-get update -qq -y
    - sudo apt-get install -qq fglrx opencl-headers libboost-chrono1.48-dev libboost-date-time1.48-dev libboost-test1.48-dev libboost-system1.48-dev libboost-filesystem1.48-dev libboost-timer1.48-dev libboost-program-options1.48-dev libboost-thread1.48-dev python-yaml lcov libopencv-dev g++-4.8
    - gem install coveralls-lcov
    - if [ "$CXX" = "g++" ]; then export CXX="g++-4.8" CC="gcc-4.8"; fi
script:
    - mkdir -p build
    - cd build
    - cmake -DBOOST_COMPUTE_BUILD_TESTS=ON -DBOOST_COMPUTE_BUILD_EXAMPLES=ON -DBOOST_COMPUTE_BUILD_BENCHMARKS=ON -DBOOST_COMPUTE_USE_OFFLINE_CACHE=ON -DBOOST_COMPUTE_ENABLE_COVERAGE=ON -DBOOST_COMPUTE_HAVE_OPENCV=ON -DBOOST_COMPUTE_THREAD_SAFE=ON -DCMAKE_CXX_FLAGS="-Wall -pedantic -Werror -Wno-variadic-macros -Wno-long-long -Wno-shadow" ..
    - make -j4
    - ./example/list_devices
    - ctest --output-on-failure
    - ctest --output-on-failure
after_success:
    - lcov --directory test --base-directory ../include/boost/compute/ --capture --output-file coverage.info
    - lcov --remove coverage.info '/usr*' -o coverage.info
    - cd .. && coveralls-lcov build/coverage.info
